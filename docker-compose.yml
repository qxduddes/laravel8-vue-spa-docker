version: "3.6"

networks:
  qstrike-network:
    driver: "bridge"

services:
  nginx:
    image: nginx:stable-alpine
    container_name: qstrike-${CONTAINER_NAME}-nginx
    ports:
      - "${API_PORT}:80"
    volumes:
      - ./src/${API_NAME}:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/upload.ini:/usr/local/etc/php/conf.d/upload.ini
    depends_on:
      - php
      - mysql
    networks:
      - qstrike-network
  
  vue-app:
    build:
      context: .
      dockerfile: npm.dockerfile
    container_name: qstrike-${CONTAINER_NAME}-vue
    ports:
      - "${VUE_APP_PORT}:8080"
    volumes:
      - ./src/${VUE_APP_NAME}:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - qstrike-network
  
  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: qstrike-${CONTAINER_NAME}-php
    volumes:
      - ./src/${API_NAME}:/var/www/html
    ports:
      - "${PHP_PORT}:9000"
    networks:
      - qstrike-network

  mysql:
    image: mysql:8.0.19
    container_name: qstrike-${CONTAINER_NAME}-mysql
    platform: linux/amd64
    restart: unless-stopped
    tty: true
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    command: --max_allowed_packet=32505856
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - qstrike-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    container_name: qstrike-${CONTAINER_NAME}-phpmyadmin
    depends_on:
      - mysql
    ports:
      - "${PHP_MY_ADMIN_PORT}:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      UPLOAD_LIMIT: 10G
    networks:
      - qstrike-network

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: qstrike-${CONTAINER_NAME}-composer
    volumes:
      - ./src/${API_NAME}:/var/www/html:delegated
    depends_on:
      - php
    working_dir: /var/www/html
    user: laravel
    #entrypoint: ["composer", "--ignore-platform-reqs"]
    networks:
      - qstrike-network

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: qstrike-${CONTAINER_NAME}-artisan
    volumes:
      - ./src/${API_NAME}:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    user: laravel
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - qstrike-network
  
  redis:
    image: "redis:4.0"
    ports:
     - "${REDIS_PORT}:6379"
    container_name: qstrike-${CONTAINER_NAME}-redis
    networks:
     - qstrike-network
